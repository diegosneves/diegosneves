name: generate animation

on:
  # run automatically every 24 hours
  schedule:
    - cron: "0 */12 * * *"

  # allows to manually run the job at any time
  workflow_dispatch:

  # run on every push on the master branch
  push:
    branches:
    - main

jobs:
  generate:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      # generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: diegosneves
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

      # Adicione o código para criar o diretório 'dist'
      - name: Create dist directory
        run: mkdir -p dist

      # push the content of <build_dir> to a branch
      # the content will be available at https://raw.githubusercontent.com/<github_user>/<repository>/<target_branch>/<file> , or as github page
      - name: push github-contribution-grid-snake.svg to the output branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

#name: generate animation
#
#on:
#  # run automatically every 12 hours
#  schedule:
#    - cron: "0 12 * * *"
#  # allows to manually run the job at any time
#  workflow_dispatch:
#
#jobs:
#  build:
#    name: Jobs to update datas
#    runs-on: ubuntu-latest
#    steps:
#
#      # Snake Animation
#      - uses: Platane/snk@master
#        id: snake-gif
#        with:
#          github_user_name: diegosneves
#          svg_out_path: |
#            github-contribution-grid-snake.svg
#            github-contribution-grid-snake-dark.svg?palette=github-dark
#          build_dir: dist
#
#      # Adicione o código para criar o diretório 'dist'
#      - name: Create dist directory
#        run: mkdir -p dist
#
#      - name: Debug
#        run: ls -R
#
#      - uses: crazy-max/ghaction-github-pages@v3.1.0
#        with:
#          target_branch: output
#          build_dir: dist
#        env:
#          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

#name: generate animation
#
#on:
#  # run automatically every 12 hours
#  schedule:
#    - cron: "0 */6 * * *"
#  # allows to manually run the job at any time
#  workflow_dispatch:
#
#jobs:
#  build:
#    name: Jobs to update datas
#    runs-on: ubuntu-latest
#    steps:
#      # Snake Animation
#      - name: Determine GitHub theme
#        id: theme
#        run: echo "::set-output name=theme::$(echo ${{ github.event.client_payload.theme }} || echo 'dark')"
#
#      - name: Set Snake SVG path
#        id: set-snake-svg
#        run: |
#          theme="${{ steps.theme.outputs.theme }}"
#          if [ "$theme" == "dark" ]; then
#            echo "::set-output name=svg_path::github-contribution-grid-snake-dark.svg?palette=github-dark"
#          else
#            echo "::set-output name=svg_path::github-contribution-grid-snake.svg"
#          fi
#
#      - uses: Platane/snk@v3
#        with:
#          github_user_name: diegosneves
#          svg_out_path: ${{ steps.set-snake-svg.outputs.svg_path }}
#
#      # Adicione o código para criar o diretório 'dist'
#      - name: Create dist directory
#        run: mkdir -p dist
#
#      # Adicione o bloco Debug aqui
#      - name: Debug
#        run: ls -R
#
#      - uses: crazy-max/ghaction-github-pages@v3.1.0
#        with:
#          target_branch: output
#          build_dir: dist
#        env:
#          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
